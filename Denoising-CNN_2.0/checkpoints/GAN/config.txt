Net1 : FDUDDnCNN(
  (mse): MSELoss()
  (conv): ModuleList(
    (0): Conv1d(2, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (1): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (2): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (3): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,))
    (4): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,))
    (5): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (6): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (7): Conv1d(65, 1, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (bn): ModuleList(
    (0): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (1): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (4): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (5): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
  )
  (FCN): ModuleList(
    (0): Conv1d(1, 64, kernel_size=(1,), stride=(1,))
    (1): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(2,))
    (2): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(3,))
    (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(5,))
    (4): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(2,))
    (5): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(3,))
    (6): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(5,))
    (7): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (8): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
    (9): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
    (10): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (11): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
    (12): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
    (13): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(4,), dilation=(2,))
    (14): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(6,), dilation=(3,))
    (15): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(10,), dilation=(5,))
    (16): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(4,), dilation=(2,))
    (17): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(6,), dilation=(3,))
    (18): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(10,), dilation=(5,))
    (19): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
    (20): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
  )
) 
Net2 : FDUDDnCNN(
  (mse): MSELoss()
  (conv): ModuleList(
    (0): Conv1d(2, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (1): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (2): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (3): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,))
    (4): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,))
    (5): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (6): Conv1d(65, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (7): Conv1d(65, 1, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (bn): ModuleList(
    (0): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (1): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (4): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
    (5): BatchNorm1d(64, eps=64, momentum=0.1, affine=True, track_running_stats=True)
  )
  (FCN): ModuleList(
    (0): Conv1d(1, 64, kernel_size=(1,), stride=(1,))
    (1): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(2,))
    (2): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(3,))
    (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(5,))
    (4): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(2,))
    (5): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(3,))
    (6): Conv1d(64, 64, kernel_size=(1,), stride=(1,), dilation=(5,))
    (7): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (8): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
    (9): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
    (10): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
    (11): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
    (12): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
    (13): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(4,), dilation=(2,))
    (14): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(6,), dilation=(3,))
    (15): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(10,), dilation=(5,))
    (16): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(4,), dilation=(2,))
    (17): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(6,), dilation=(3,))
    (18): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(10,), dilation=(5,))
    (19): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
    (20): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
  )
) 
DNet : Disriminator(
  (fc): Sequential(
    (0): Linear(in_features=2001, out_features=2001, bias=True)
    (1): BatchNorm1d(2001, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2)
    (3): Linear(in_features=2001, out_features=2001, bias=True)
    (4): BatchNorm1d(2001, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): LeakyReLU(negative_slope=0.2)
    (6): Linear(in_features=2001, out_features=1, bias=True)
    (7): Sigmoid()
  )
) 
TrainSet : Size is 452 
ValSet : Size is 50 
Optimizer1 : Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
) 
Optimizer2 : Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
) 
Optimizer3 : Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
) 
StatsManager1 : DenoisingStatsManager 
StatsManager2 : DenoisingStatsManager 
BatchSize : 10 

