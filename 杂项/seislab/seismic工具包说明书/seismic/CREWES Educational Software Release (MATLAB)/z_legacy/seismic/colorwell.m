function [cop,tcop]=colorwell(r,t,n,l,op_length,fparms)% [cop,tcop]=colorwell(r,t,n,l,op_length,fparms)% [cop,tcop]=colorwell(r,t,n,l,op_length)% [cop,tcop]=colorwell(r,t,n,l)% [cop,tcop]=colorwell(r,t,n)% [cop,tcop]=colorwell(r,t)%% COLORWELL designs a convolutional minimum phase operator which% can be applied to the output of any spiking decon to correct% for a non-white reflectivity.%% cop= output color operator% tcop= time coordinate vector for cop % r= well log reflectivity series whose amplitude spectrum shows the expected %    non-white behavior% t= time coordinate for r% n= order of the polynomial approximation to the spectrum%  ***************** default=3 ************% l= Burg prediction filter length to be used in obtaining the%    smoothed spectrum of r. The smaller l is, the smoother the%    spectral color estimate.%  ***************** default = 10 *************% op_length= length (in seconds) of the desired operator%  **************** default = .2 ***************% fparms= 2 element vector of antialias filter parameters%         fparms(1)= 3db down point of high frequency rolloff%                    expressed as a fraction of the new nyquist%         fparms(2)= attenuation desired at the new Nyquist in db% *************** default = [.6,120] *******************%% NOTE: It is illegal for you to use this software for a purpose other% than non-profit education or research UNLESS you are employed by a CREWES% Project sponsor. By using this software, you are agreeing to the terms% detailed in this software's Matlab source file. % BEGIN TERMS OF USE LICENSE%% This SOFTWARE is maintained by the CREWES Project at the Department% of Geology and Geophysics of the University of Calgary, Calgary,% Alberta, Canada.  The copyright and ownership is jointly held by % its author (identified above) and the CREWES Project.  The CREWES % project may be contacted via email at:  crewesinfo@crewes.org% % The term 'SOFTWARE' refers to the Matlab source code, translations to% any other computer language, or object code%% Terms of use of this SOFTWARE%% 1) Use of this SOFTWARE by any for-profit commercial organization is%    expressly forbidden unless said organization is a CREWES Project%    Sponsor.%% 2) A CREWES Project sponsor may use this SOFTWARE under the terms of the %    CREWES Project Sponsorship agreement.%% 3) A student or employee of a non-profit educational institution may %    use this SOFTWARE subject to the following terms and conditions:%    - this SOFTWARE is for teaching or research purposes only.%    - this SOFTWARE may be distributed to other students or researchers %      provided that these license terms are included.%    - reselling the SOFTWARE, or including it or any portion of it, in any%      software that will be resold is expressly forbidden.%    - transfering the SOFTWARE in any form to a commercial firm or any %      other for-profit organization is expressly forbidden.%% END TERMS OF USE LICENSE specop=0; Sdb=0; if nargin<6, fparms=[.6,120]; end if nargin<5, op_length=.2; end if nargin<4, l=10; end if nargin<3, n=3; end  % compute the number of spectral points needed	dt=t(2)-t(1); op_length=op_length/dt+1; op_length=2^nextpow2(op_length); [a,b]= fftrl(ones(1,op_length),t); nop=length(a);% compute the burg amplitude spectrum [specb,fb]= burg(r,t,l,nop);% invoke interactive polynomial fitting [specop,coeff]=visifit(todb(specb),fb,n); specop=fromdb(specop,max(specb));% multiply by an antialiasing filter fn=.5/dt; fmax=[fparms(1)*fn,.3*fn*(1-fparms(1))]; [fltr,fop]=filtspec(ones(1,op_length),t,[0,0],fmax,0,fparms(2)); specop=specop.*fltr;% compute the minimum phase time domain operator [cop,tcop]= minwave(specop,fb);
